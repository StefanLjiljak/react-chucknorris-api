{"version":3,"sources":["chuck.jpg","App.js","components/Details.js","components/NotFound.js","index.js"],"names":["module","exports","App","useState","joke","searchKeyword","searchUrl","state","setState","fetchRandomData","a","axios","get","result","data","value","fetchSearchData","searchResult","total","randomFacts","useQuery","searchFacts","error","message","isLoading","className","src","Chuck","alt","type","onChange","event","target","onClick","hidden","to","id","map","_joke","length","key","Details","icon_url","useParams","url","fetchDetails","detailsFacts","NotFound","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","retry","staleTime","ReactDOM","render","client","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.b159c8aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chuck.39b94c0e.jpg\";","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Chuck from './chuck.jpg';\r\nimport axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  const [state, setState] = useState({\r\n    joke: '',\r\n    searchKeyword: '',\r\n    searchUrl: 'https://api.chucknorris.io/jokes/search?query=',\r\n  });\r\n\r\n  const fetchRandomData = async () => {\r\n    const result = await axios.get('https://api.chucknorris.io/jokes/random');\r\n    setState({\r\n      ...state,\r\n      joke: result.data.value,\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const fetchSearchData = async () => {\r\n    if (state.searchKeyword) {\r\n      const searchResult = await axios.get(\r\n        state.searchUrl + state.searchKeyword\r\n      );\r\n      setState({\r\n        ...state,\r\n        joke:\r\n          searchResult.data.total === 0\r\n            ? 'No Search Results'\r\n            : searchResult.data.result,\r\n      });\r\n      return searchResult;\r\n    }\r\n  };\r\n\r\n  const randomFacts = useQuery('randomFacts', fetchRandomData);\r\n  const searchFacts = useQuery('searchFacts', fetchSearchData);\r\n\r\n  if (randomFacts.error)\r\n    return <h1>Error {randomFacts.error.message}, please try again</h1>;\r\n  if (randomFacts.isLoading) return <h1>Loading...</h1>;\r\n\r\n  if (searchFacts.error)\r\n    return <h1>Error {searchFacts.error.message}, please try again</h1>;\r\n  if (searchFacts.isLoading) return <h1>Loading...</h1>;\r\n\r\n  const searchJoke = (event) => {\r\n    setState({\r\n      ...state,\r\n      searchKeyword: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          <h1 className=\"title\">Chuck Norris.io API</h1>\r\n          <img src={Chuck} alt=\"Chuck Norris\" />\r\n        </div>\r\n\r\n        <div className=\"col-6 searchJokeCol\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">Search for a fact</div>\r\n            <div className=\"card-body\">\r\n              <input\r\n                type=\"text\"\r\n                onChange={searchJoke}\r\n                value={state.searchKeyword}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              onClick={fetchSearchData}\r\n              className=\"btn btn-warning btn-lg\"\r\n            >\r\n              Generate Joke\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <h2 className=\"subTitle\">Search Result</h2>\r\n      <h4>\r\n        {typeof state.joke === 'string' ? (\r\n          <p>\r\n            {state.joke}\r\n            <span hidden={state.joke === 'No Search Results'}>\r\n              <Link to={`/details/${randomFacts.data.data.id}`}>\r\n                {' '}\r\n                ...details\r\n              </Link>\r\n            </span>\r\n          </p>\r\n        ) : (\r\n          state.joke.map((_joke) => {\r\n            if (state.joke.length > 10) {\r\n              state.joke.length = 10;\r\n              return (\r\n                <p key={_joke.id} className=\"fact-item\">\r\n                  {_joke.value}\r\n                  <span hidden={state.joke === 'No Search Results'}>\r\n                    <Link to={`/details/${_joke.id}`}> ...details</Link>\r\n                  </span>\r\n                </p>\r\n              );\r\n            }\r\n            return (\r\n              <p key={_joke.id} className=\"fact-item\">\r\n                {_joke.value}\r\n                <span hidden={state.joke === 'No Search Results'}>\r\n                  <Link to={`/details/${_joke.id}`}> ...details</Link>\r\n                </span>\r\n              </p>\r\n            );\r\n          })\r\n        )}\r\n      </h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Details = () => {\r\n  const [state, setState] = useState({\r\n    id: '',\r\n    icon_url: '',\r\n    value: '',\r\n  });\r\n\r\n  const { id } = useParams();\r\n  const url = `https://api.chucknorris.io/jokes/${id}`;\r\n\r\n  const fetchDetails = async () => {\r\n    const result = await axios(url);\r\n    setState({\r\n      id: result.data.id,\r\n      icon_url: result.data.icon_url,\r\n      value: result.data.value,\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const detailsFacts = useQuery('detailsFacts', fetchDetails);\r\n\r\n  if (detailsFacts.error)\r\n    return (\r\n      <h1 className=\"center\">\r\n        Error {detailsFacts.error.message}, please try again\r\n      </h1>\r\n    );\r\n  if (detailsFacts.isLoading) return <h1 className=\"center\">Loading...</h1>;\r\n\r\n  return (\r\n    <div className=\"center\">\r\n      {state.id === id ? (\r\n        <div>\r\n          <img src={state.icon_url} alt=\"\" />\r\n          <p>{state.value}</p>\r\n        </div>\r\n      ) : (\r\n        <p>No Matching Chuck Norris Fact!</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => (\r\n  <div className=\"center\">\r\n    <h1>404 - Not Found!</h1>\r\n    <Link to=\"/\">Go to the Landing Page!</Link>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Details from './components/Details';\r\nimport NotFound from './components/NotFound';\r\n\r\nconst queryClient = new QueryClient({\r\n  defaultOptions: {\r\n    queries: {\r\n      refetchOnWindowFocus: false,\r\n      retry: false,\r\n      staleTime: 1,\r\n    },\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <QueryClientProvider client={queryClient}>\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <App />\r\n        </Route>\r\n        <Route path=\"/details/:id\">\r\n          <Details />\r\n        </Route>\r\n        <Route>\r\n          <NotFound />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  </QueryClientProvider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}